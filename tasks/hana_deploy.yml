---

- name: Unpack SAPCAR archive (backwards compatibility)
  block:
    - name: Use SAPCAR to extract the SAP HANA Bundle SAR file
      command: >-
        {{ sap_hana_deployment_sapcar_path }}/{{ sap_hana_deployment_sapcar_file_name }} \
        -xvf {{ sap_hana_deployment_bundle_path }}/{{ sap_hana_deployment_bundle_sar_file_name }} \
        -manifest SIGNATURE.SMF
      register: sap_hana_deployment_register_extractbundle
      args:
        chdir: "{{ sap_hana_deployment_sapcar_path }}"
      changed_when: "'SAPCAR: processing archive' in sap_hana_deployment_register_extractbundle.stdout"

    - name: Setting fact for HANA installer path
      set_fact:
        sap_hana_installdir: "{{ sap_hana_deployment_sapcar_path }}/SAP_HANA_DATABASE"
  when:
    - not(( sap_hana_deployment_bundle_path is none ) or ( sap_hana_deployment_bundle_path | trim == ''))
    - not(( sap_hana_deployment_bundle_sar_file_name is none ) or (sap_hana_deployment_bundle_sar_file_name | trim == ''))

- name: Extract ZIP archive
  block:
    - name: Use unarchive to extract the SAP HANA Bundle ZIP file
      unarchive:
        src: "{{ sap_hana_deployment_zip_path }}/{{ sap_hana_deployment_zip_file_name }}"
        dest: "{{ sap_hana_deployment_zip_path }}"
      register: sap_hana_deployment_register_extractzip

    - name: Setting fact for HANA installer path
      set_fact:
        sap_hana_installdir: "{{ sap_hana_deployment_zip_path }}/DATA_UNITS/HDB_SERVER_LINUX_X86_64"
  when:
    - not(( sap_hana_deployment_zip_path is none ) or ( sap_hana_deployment_zip_path | trim == ''))
    - not(( sap_hana_deployment_zip_file_name is none ) or (sap_hana_deployment_zip_file_name | trim == ''))

- name: Check availability of "{{ sap_hana_installdir + '/hdblcm' }}"
  stat:
    path: "{{ sap_hana_installdir + '/hdblcm' }}"
  register: sap_hana_deployment_register_hdblcm_stat
  failed_when: not sap_hana_deployment_register_hdblcm_stat.stat.exists

- name: Search for installed SAP Systems
  shell: |
         if [ -x /usr/sap/hostctrl/exe/saphostctrl ]; then
            /usr/sap/hostctrl/exe/saphostctrl -function GetCIMObject -enuminstances SAPInstance
         fi
  register: sap_hana_deployment_sap_systems_list

- name: Display installed SAP Systems
  debug:
          var: sap_hana_deployment_sap_systems_list

- set_fact:
      sap_hana_deployment_installed_sid: "{{ item.split(',').2|trim }}"
  loop: "{{ sap_hana_deployment_sap_systems_list.stdout_lines|list }}"
  when: item is search("^ SID")

- set_fact:
    sap_hana_deployment_installed_num: "{{ item.split(',').2|trim }}"
  loop: "{{ sap_hana_deployment_sap_systems_list.stdout_lines|list }}"
  when: item is search("^ SystemNumber")

- set_fact:
    sap_hana_deployment_installed_typ: "{{ item.split(',').2|trim }}"
  loop: "{{ sap_hana_deployment_sap_systems_list.stdout_lines|list }}"
  when: item is search("^ InstanceName")

- name: Display SID
  debug:
          msg:
            - "Found installed SAP System:"
            - "SID:    {{ sap_hana_deployment_installed_sid }}"
            - "Number: {{ sap_hana_deployment_installed_num }}"
            - "Type:   {{ sap_hana_deployment_installed_typ }}"
  when: sap_hana_deployment_installed_sid is defined

- name: Fail if SID is already used on the system with different instance number
  fail:
          msg: "SID {{ sap_hana_deployment_installed_sid }} is already installed with different instance number"
  when:
         - sap_hana_deployment_installed_sid is defined
         - sap_hana_deployment_installed_sid == sap_hana_deployment_hana_sid
         - sap_hana_deployment_installed_num != sap_hana_deployment_hana_instance_number

- name: Fail if instance number is used by other SAP component
  fail:
          msg: "The instance number {{ sap_hana_deployment_installed_num }} is already used on this system"
  when:
         - sap_hana_deployment_installed_num is defined
         - sap_hana_deployment_installed_num == sap_hana_deployment_hana_instance_number
         - sap_hana_deployment_installed_sid != sap_hana_deployment_hana_sid

- name: Fail if you try to install HANA with same SID/Instance than other SAP system
  fail:
          msg: "There is a non-HANA software with the same SID/instance number running"
  when:
         - sap_hana_deployment_installed_typ is defined
         - sap_hana_deployment_installed_sid == sap_hana_deployment_hana_sid
         - sap_hana_deployment_installed_num == sap_hana_deployment_hana_instance_number
         - sap_hana_deployment_installed_typ != "HDB"+sap_hana_deployment_hana_instance_number

- name: Info if HANA is already installed
  debug:
          msg: "The HANA Database is already running on the system"
  when:
         - sap_hana_deployment_installed_typ is defined
         - sap_hana_deployment_installed_sid == sap_hana_deployment_hana_sid
         - sap_hana_deployment_installed_num == sap_hana_deployment_hana_instance_number
         - sap_hana_deployment_installed_typ == "HDB"+sap_hana_deployment_hana_instance_number

- name: skip installation if HANA is already installed
  set_fact:
          sap_hana_deployment_skip: true
  when:
         - sap_hana_deployment_installed_typ is defined
         - sap_hana_deployment_installed_sid == sap_hana_deployment_hana_sid
         - sap_hana_deployment_installed_num == sap_hana_deployment_hana_instance_number
         - sap_hana_deployment_installed_typ == "HDB"+sap_hana_deployment_hana_instance_number

- name: Install HANA if not on the system
  block:
        - name: create temporary directory to store the processed template
          tempfile:
            state: directory
            suffix: hanaconfig
          register: tmpdir

        - name: "Process HANA Configfile Template"
          template:
            src: "{{ role_path }}/templates/configfile.j2"
            dest: "{{ tmpdir.path }}/configfile.cfg"
          register: cftemplate

        - name: Install SAP HANA
          command: "./hdblcm {{ sap_hana_deployment_hdblcm_extraargs }} --configfile={{ tmpdir.path }}/configfile.cfg -b"
          register: installhana
          args:
            chdir: "{{ sap_hana_installdir }}"
          changed_when: "'SAP HANA Lifecycle Management' in installhana.stdout"
  when:  not sap_hana_deployment_skip
